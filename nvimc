#!/bin/bash
 
if [[ ! -e $HOME/.config/nvimc/.config ]]
then
  mkdir $HOME/.config 
  mkdir $HOME/.config/nvimc/ 2> /dev/null
  touch $HOME/.config/nvimc/.configure 2> /dev/null
  echo "input_mount_key:n" > $HOME/.config/nvimc/.configure 2> /dev/null
  echo "input_mount_config:n" >> $HOME/.config/nvimc/.configure 2> /dev/null
fi

mount_keys=$(cat $HOME/.config/nvimc/.configure | awk -F : 'NR==1 {print $2}')
mount_gitconfig=$(cat $HOME/.config/nvimc/.configure | awk -F : 'NR==2 {print $2}')
mounted_working_directory=""
mounted_working_directory_location=""

start() {
  if [[ $mount_keys == "n" && $mount_gitconfig == "n" ]]
  then
    docker run -it -v $1:$2 ghcr.io/myselfakashagarwal/coder nvim  
  elif [[ $mount_keys == "n" && $mount_gitconfig == "y" ]]
  then
    docker run -it -v $1:$2 -v $HOME/.gitconfig:/root/.gitconfig ghcr.io/myselfakashagarwal/coder nvim 
  elif [[ $mount_keys == "y" && $mount_gitconfig == "n" ]]
  then
    docker run -it -v $1:$2  -v $HOME/.ssh:/root/.ssh ghcr.io/myselfakashagarwal/coder nvim 
  elif [[ $mount_keys == "y" && $mount_gitconfig == "y" ]]
  then
    docker run -it -v $1:$2 -v $HOME/.ssh:/root/.ssh -v $HOME/.gitconfig:/root/.gitconfig ghcr.io/myselfakashagarwal/coder nvim
  else
     docker run -it -v $1:$2 ghcr.io/myselfakashagarwal/coder nvim 
  fi
}
 
if [[ $# -eq 0 ]]
then
  mounted_working_directory=$(pwd)
  mounted_working_directory_location="/mnt/$(basename $mounted_working_directory)"
  start $mounted_working_directory $mounted_working_directory_location 
elif [[ $# == 1 ]]
then
  case $1 in 
  --help | -h)
    echo "
  Usage: 
  nvimc                          Open the current working directory in the neovim 
  nvimc [OPTIONS] [ARGUMENTS]    Open the neovim with respect to arguments provided

  Options                 Argument                      Action 
  --version , -v          <none>                        To get the current version
  --configure , -c        <none>                        To configure workspace 
  --file , -f             <PATH-TO-FOLDER>              To open the provided folder in neovim  
         "
  ;;
  --version | -v)
    echo "1.0 stable"
  ;;
  --configure | -c) 
    echo "
  Note: The configurations are primarily booleans thy which followed every time a coder container is spawned
        The configs are stored at $HOME/.config/nvimc/.configure
        "
    read -p "Mount ssh keys [y/n]:" input_mount_key
    read -p "Mount Git Config [y/n]" input_mount_config


    if [[ ${input_mount_key} == 'y' ]]
    then
      if [[ -e $HOME/.ssh ]]; then
        echo "input_mount_key:y" > $HOME/.config/nvimc/.configure
      else
        echo "Warning: keys not found, will not be mounted"
        echo "input_mount_key:n" > $HOME/.config/nvimc/.configure
      fi
    else
       echo "input_mount_key:n" > $HOME/.config/nvimc/.configure
    fi


    if [[ ${input_mount_config} == 'y' ]]
    then
      if [[ -e $HOME/.gitconfig ]]; then
        echo "input_mount_config:$input_mount_config" >> $HOME/.config/nvimc/.configure
      else
        echo "Warning: Git Config not found, will not be mounted"
        echo "input_mount_config:$input_mount_config" >> $HOME/.config/nvimc/.configure
      fi
    else
       echo "input_mount_config:$input_mount_config" >> $HOME/.config/nvimc/.configure
    fi
  ;;
  *)
    echo "Error: Invalid arguments"
  ;;
  esac
else
  case $1 in 
  --file | -f)
    mounted_working_directory=$2
    mounted_working_directory_location=/mnt/$(basename $mounted_working_directory)
    if [[ -e $mounted_working_directory || -d $mounted_working_directory ]]
    then
      start $mounted_working_directory $mounted_working_directory_location 
    else 
      echo "Error: Invalid file"
    fi
  ;;
  *)
    echo "Error: Invalid arguments"
  ;;
  esac
fi 
